package com.gcinemaflix.model;

import java.sql.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

@Entity
@Table(name="movies")
@JsonIgnoreProperties(ignoreUnknown = true) 
public class Movie {
	@Id
	@GeneratedValue
	@Column(name="movie_id")
	long id;
	@JsonProperty(value="Title")
	String title;
	@JsonProperty(value="Year")
	String year;
	@JsonProperty(value="Rated")
	String rated;
	@JsonProperty(value="Released")
	Date released;
	@JsonProperty(value="RunTime")
	String runTime;
	@JsonProperty(value="Director")
	String director;
	@JsonProperty(value="Writer")
	String writers;
	@JsonProperty(value="Actors")
	String actors;
	@JsonProperty(value="Plot")
	String plot;
	@JsonProperty(value="Language")
	String language;
	@JsonProperty(value="Country")
	String country;
	@JsonProperty(value="Awards")
	String awards;
	@JsonProperty(value="Poster")
	String poster;
	@JsonProperty(value="Metascore")
	int metascore;
	
	float imdbRating;
	long imdbVotes;
	String imdbID;
	@JsonProperty(value="Type")
	String type;
	
//	@ManyToMany
//	@JoinTable(name="movies_genres",
//			joinColumns = @JoinColumn(name="movie_id"),
//			inverseJoinColumns = @JoinColumn(name="genre_id" ))
//	@JsonProperty(value="Genre")
//	List<Genre> genres; 
//	
	
	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}
	public String getYear() {
		return year;
	}
	public void setYear(String year) {
		this.year = year;
	}
	public String getRated() {
		return rated;
	}
	public void setRated(String rated) {
		this.rated = rated;
	}
	public Date getReleased() {
		return released;
	}
	public void setReleased(Date released) {
		this.released = released;
	}
	public String getDirector() {
		return director;
	}
	public void setDirector(String director) {
		director = director;
	}
	public String getWriter() {
		return writers;
	}
	public void setWriter(String writers) {
		this.writers = writers;
	}
	public String getActors() {
		return actors;
	}
	public void setActors(String actors) {
		this.actors = actors;
	}
	public String getPlot() {
		return plot;
	}
	public void setPlot(String plot) {
		this.plot = plot;
	}
	public String getLanguage() {
		return language;
	}
	public void setLanguage(String languages) {
		this.language = languages;
	}
	public String getCountry() {
		return country;
	}
	public void setCountry(String country) {
		this.country = country;
	}
	public String getAwards() {
		return awards;
	}
	public void setAwards(String awards) {
		this.awards = awards;
	}
	public String getPoster() {
		return poster;
	}
	public void setPoster(String poster) {
		this.poster = poster;
	}
	public int getMetascore() {
		return metascore;
	}
	public void setMetascore(int metascore) {
		this.metascore = metascore;
	}
	public float getImdbRating() {
		return imdbRating;
	}
	public void setImdbRating(float imdbRating) {
		this.imdbRating = imdbRating;
	}
	public long getImdbVotes() {
		return imdbVotes;
	}
	public void setImdbVotes(long imdbVotes) {
		this.imdbVotes = imdbVotes;
	}
	public String getImdbID() {
		return imdbID;
	}
	public void setImdbID(String imdbID) {
		this.imdbID = imdbID;
	}
	public String getType() {
		return type;
	}
	public void setType(String type) {
		this.type = type;
	}
	long getId() {
		return id;
	}
	void setId(long movieId) {
		this.id = movieId;
	}
//	public List<Genre> getGenres() {
//		return genres;
//	}
//	public void setGenres(List<Genre> genres) {
//		this.genres = genres;
//	}
}
